diff -durpN php-7.1.27.orig/configure.in php-7.1.27/configure.in
--- php-7.1.27.orig/configure.in	2019-03-26 07:59:51.305803405 -0400
+++ php-7.1.27/configure.in	2019-03-26 08:00:30.741955480 -0400
@@ -703,6 +703,10 @@ asprintf \
 nanosleep \
 )
 
+PHP_ARG_WITH(flock-type, flock ordering type (use for cross compiling),
+[  --with-flock-type={linux|bsd}
+                          Set the flock ordering type for further checks during cross-compiling], unknown, no)
+
 dnl Some systems (like OpenSolaris) do not have nanosleep in libc
 PHP_CHECK_FUNC_LIB(nanosleep, rt)
 
diff -durpN php-7.1.27.orig/ext/opcache/config.m4 php-7.1.27/ext/opcache/config.m4
--- php-7.1.27.orig/ext/opcache/config.m4	2019-03-26 07:59:51.306803409 -0400
+++ php-7.1.27/ext/opcache/config.m4	2019-03-26 08:00:30.741955480 -0400
@@ -358,7 +358,14 @@ AC_TRY_RUN([
 	flock_type=linux
     AC_DEFINE([HAVE_FLOCK_LINUX], [], [Struct flock is Linux-type])
     AC_MSG_RESULT("yes")
-], AC_MSG_RESULT("no") )
+], AC_MSG_RESULT("no"), [
+  if test "$PHP_FLOCK_TYPE" == "linux"; then
+    AC_MSG_RESULT("yes")
+    flock_type=linux
+  else
+    AC_MSG_RESULT("no")
+  fi
+] )
 
 AC_MSG_CHECKING("whether flock struct is BSD ordered")
 AC_TRY_RUN([
@@ -374,7 +381,14 @@ AC_TRY_RUN([
 	flock_type=bsd
     AC_DEFINE([HAVE_FLOCK_BSD], [], [Struct flock is BSD-type])
     AC_MSG_RESULT("yes")
-], AC_MSG_RESULT("no") )
+], AC_MSG_RESULT("no"), [
+  if test "$PHP_FLOCK_TYPE" == "bsd"; then
+    AC_MSG_RESULT("yes")
+    flock_type=bsd
+  else
+    AC_MSG_RESULT("no")
+  fi
+])
 
 if test "$flock_type" = "unknown"; then
 	AC_MSG_ERROR([Don't know how to define struct flock on this system[,] set --enable-opcache=no])
